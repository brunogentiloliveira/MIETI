node n1 {
    type router
    model host
    network-config {
	hostname RT1
	!
	interface eth3
	 ip address 140.0.134.129/25
	!
	interface eth4
	 ip address 140.0.135.1/30
	!
	interface eth2
	 ip address 140.0.134.1/25
	!
	interface eth1
	 ip address 140.0.132.1/23
	!
	interface eth0
	 ip address 140.0.128.1/22
	!
    }
    canvas c1
    iconcoords {552.0 360.0}
    labelcoords {552.0 392.0}
    services {zebra DefaultRoute}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 140.0.128.1/22
	  
	!
	interface eth1
	  ip address 140.0.132.1/23
	  
	!
	interface eth2
	  ip address 140.0.134.1/25
	  
	!
	interface eth3
	  ip address 140.0.134.128/25
	  
	!
	interface eth4
	  ip address 140.0.135.1/30
	  
	!
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 140.0.135.2
	}
    }
    interface-peer {eth0 n9}
    interface-peer {eth1 n8}
    interface-peer {eth2 n7}
    interface-peer {eth3 n10}
    interface-peer {eth4 n11}
}

node n2 {
    type router
    model PC
    network-config {
	hostname PC1
	!
	interface eth0
	 ip address 140.0.128.20/22
	!
    }
    canvas c1
    iconcoords {552.0 118.0}
    labelcoords {552.0 150.0}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 140.0.128.1
	
	}
    }
    interface-peer {eth0 n9}
}

node n3 {
    type router
    model PC
    network-config {
	hostname PC2
	!
	interface eth0
	 ip address 140.0.132.20/23
	!
    }
    canvas c1
    iconcoords {841.0 263.0}
    labelcoords {841.0 295.0}
    services {DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 140.0.132.1
	}
    }
    interface-peer {eth0 n8}
}

node n4 {
    type router
    model PC
    network-config {
	hostname PC3
	!
	interface eth0
	 ip address 140.0.134.20/25
	!
    }
    canvas c1
    iconcoords {747.0 554.0}
    labelcoords {747.0 586.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 140.0.134.1
	
	}
    }
    services {DefaultRoute}
    interface-peer {eth0 n7}
}

node n5 {
    type router
    model PC
    network-config {
	hostname PC4
	!
	interface eth0
	 ip address 140.0.134.138/25
	!
    }
    canvas c1
    iconcoords {359.0 553.0}
    labelcoords {359.0 585.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 140.0.134.129
	
	}
    }
    services {DefaultRoute}
    interface-peer {eth0 n10}
}

node n6 {
    type rj45
    network-config {
	hostname eth0
	!
    }
    canvas c1
    iconcoords {265.0 264.0}
    labelcoords {265.0 296.0}
    interface-peer {0 n11}
}

node n7 {
    type hub
    network-config {
	hostname n7
	!
    }
    canvas c1
    iconcoords {646.0 457.0}
    labelcoords {646.0 481.0}
    interface-peer {e0 n1}
    interface-peer {e1 n4}
}

node n8 {
    type hub
    network-config {
	hostname n8
	!
    }
    canvas c1
    iconcoords {695.0 312.0}
    labelcoords {695.0 336.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

node n10 {
    type hub
    network-config {
	hostname n10
	!
    }
    canvas c1
    iconcoords {457.0 456.0}
    labelcoords {457.0 480.0}
    interface-peer {e0 n1}
    interface-peer {e1 n5}
}

node n9 {
    type hub
    network-config {
	hostname n9
	!
    }
    canvas c1
    iconcoords {552.0 240.0}
    labelcoords {552.0 264.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
}

node n11 {
    type router
    model router
    network-config {
	hostname n11
	!
	interface eth1
	 ip address 10.0.2.10/24
	!
	interface eth0
	 ip address 140.0.135.2/30
	!
    }
    canvas c1
    iconcoords {409.0 306.0}
    labelcoords {409.0 338.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:Firewall
	custom-command Firewall
	config {
	files=('firewall.sh', )
	}
    }
    custom-config {
	custom-config-id service:Firewall:firewall.sh
	custom-command firewall.sh
	config {
	iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	
	iptables -A FORWARD -i eth0 -j ACCEPT
	
	iptables -A FORWARD -o eth0 -j ACCEPT
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 140.0.135.2/30
	!
	interface eth1
	  ip address 10.0.2.10/24
	!
	
	ip route 140.0.128.0/21 140.0.135.1
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.2.2
	
	}
    }
    services {zebra vtysh IPForward DefaultRoute StaticRoute Firewall}
}

link l1 {
    nodes {n1 n9}
    bandwidth 0
}

link l6 {
    nodes {n9 n2}
    bandwidth 0
}

link l2 {
    nodes {n1 n8}
    bandwidth 0
}

link l7 {
    nodes {n8 n3}
    bandwidth 0
}

link l3 {
    nodes {n1 n7}
    bandwidth 0
}

link l8 {
    nodes {n7 n4}
    bandwidth 0
}

link l4 {
    nodes {n1 n10}
    bandwidth 0
}

link l9 {
    nodes {n10 n5}
    bandwidth 0
}

link l5 {
    nodes {n1 n11}
    bandwidth 0
}

link l10 {
    nodes {n11 n6}
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    enablerj45=0
}

